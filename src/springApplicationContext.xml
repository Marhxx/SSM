<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- 1、配置自动扫描的（Spring IOC 容器不扫描Controller） -->
	<context:component-scan base-package="com.hxx.ssm">
	</context:component-scan>

	<!-- 2.加载配数据源配置文件 db.properties -->
	<context:property-placeholder location="classpath:config/db.properties" />

	<!-- 3、配置 C3P0 数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${db.driver}"></property>
		<property name="jdbcUrl" value="${db.url}"></property>
		<property name="user" value="${db.username}"></property>
		<property name="password" value="${db.password}"></property>

	</bean>

<!-- 3. 配置SqlSessionFactoryBean对象，由此对象来创建SqlSession。 -->
	<!-- 配置mybatis的sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 依赖数据源Bean -->
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mappers.xml文件 -->
		<property name="mapperLocations" value="classpath:com/hxx/ssm/dao/SSMDao.xml" />
		<!-- mybatis的主配置文件 -->
		<property name="configLocation" value="classpath:mybatis-confing.xml" />
		
	</bean>
	<!-- 配置MapperFactoryBean对象，扫描DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包中的所有数据访问接口对象 -->
		<property name="basePackage" value="com.hxx.ssm.dao" />
		<!-- 依赖 sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 提交事务 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
	<property name="dataSource" ref="dataSource"></property>
	
	</bean>
   <tx:annotation-driven transaction-manager="transactionManager"/>	
</beans> 

